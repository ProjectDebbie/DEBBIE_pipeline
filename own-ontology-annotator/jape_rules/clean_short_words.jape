Imports: {
import static gate.Utils.*;
}
Phase:secondphase
Input: Token
Options: control = all
Rule: delete_rule
(
{Token} 
)
:short_annotations_delete
-->
{
	gate.AnnotationSet lookup = (gate.AnnotationSet) bindings.get("short_annotations_delete");
 	gate.Annotation ann = (gate.Annotation) lookup.iterator().next();
 	// get the offsets
	Long length = lookup.lastNode().getOffset() - lookup.firstNode().getOffset();
	if (length < 3)  {
	    gate.AnnotationSet  to_remove = outputAS.get(ann.getStartNode().getOffset(), ann.getEndNode().getOffset());
 		for (Annotation rem : to_remove) {
 			//remove only the stop word, this is for cases in where a stop word is inside a bigger term annotated
 			if(ann.getStartNode().getOffset()==rem.getStartNode().getOffset() && ann.getEndNode().getOffset()==rem.getEndNode().getOffset() && !rem.getType().equals("Token") && !rem.getType().equals("Sentence")){
 				System.out.println("REMOVE SHORT WORD " + rem.getType() + " : " + stringFor(doc, rem));
 				outputAS.remove(rem);
 			}
 		}
	}
}
